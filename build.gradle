plugins {
    id "java"
    id "java-library"
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

def name = 'PureTickets'
group 'co.uk.magmo.pureTickets'
version '2.0.0-beta.8'

repositories {
    jcenter()

    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/public/" }
    maven { url "https://repo.aikar.co/content/groups/aikar/" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "me.liuwj.ktorm:ktorm-core:2.7.2"
    implementation "me.liuwj.ktorm:ktorm-support-sqlite:2.7.2"

    api "co.aikar:acf-paper:0.5.0-SNAPSHOT"
    compileOnly "org.jetbrains:annotations:17.0.0"
    compileOnly "org.spigotmc:spigot-api:1.15-R0.1-SNAPSHOT"
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

shadowJar {
    relocate "co.aikar.commands", "co.uk.magmo.puretickets.lib.commands"
    relocate "co.aikar.locales", "co.uk.magmo.puretickets.lib.locales"
    relocate "net.jodah.expiringmap", "co.uk.magmo.puretickets.expiringmap"

    exclude 'kotlin/reflect/**/*.class'
    exclude 'kotlin/coroutines/**/*.class'
    exclude 'kotlin/experimental/**/*.class'

    archiveFileName = name + ".jar"
    mergeServiceFiles()
    minimize()
}

build {
    dependsOn(shadowJar)
}

if (file("$rootDir/local.gradle").exists()) {
    apply from: "$rootDir/local.gradle"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}